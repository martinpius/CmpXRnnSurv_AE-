# -*- coding: utf-8 -*-
"""CmpXRnnSurv_AE_Trainer

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1A-Cz516ePH-ROGCJChq0TGDq-7quzZFT
"""

def CmpXRnnSurv_AE_Trainer(dataset_names = ["synthetic","mimic3", "unos"]):

  '''
  @Author: Martin Pius
  # This module employs our __trainer__ for training and evaluation
  ### Caution: This takes time depending on your computation resorces: Adviced to use GPU###
  '''
  num_epochs = 3000
  clip = 1.5
  scheduler = True
  for k in range(len(dataset_names)):
    if dataset_names[k] == "synthetic":
      print(f">>>> Training for the synthetic data. Please wait....\n")
      val_loss_syst, ct_idx_syst = __trainer__(num_epochs, clip, dataset_names[k])
    elif dataset_names[k] == "mimic3":
      print(f"\n>>>> Training for the mimic3 data. Please wait....\n")
      val_loss_mimic3, ct_idx_mimic3 = __trainer__(num_epochs, clip, dataset_names[k])
    elif dataset_names[k] == "unos":
      print(f"\n>>>> Training for the unos-optn-kidpan data. Please wait....\n")
      val_loss_unos, ct_idx_unos = __trainer__(num_epochs, clip, dataset_names[k])
    else: 
      print(f"\n>>>> dataset not compartible with ComplexRnnSurv")
  return (val_loss_syst, val_loss_mimic3, val_loss_unos), (ct_idx_syst, ct_idx_mimic3, ct_idx_unos)